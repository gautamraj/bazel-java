bazel_dep(name = "rules_jvm_external", version = "6.6")
bazel_dep(name = "rules_java", version = "8.6.3")

# To update maven dependencies, update the lines below and then run:
# bazel run @unpinned_maven//:pin
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        # Command line arg parsing
        "com.beust:jcommander:1.82",
        "com.fasterxml.jackson.core:jackson-databind:2.18.2",
        "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.18.2",
        "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2",
        "com.github.spotbugs:spotbugs-annotations:4.8.6",
        "com.google.dagger:dagger-compiler:2.54",
        "com.google.dagger:dagger-producers:2.54",
        "com.google.dagger:dagger-spi:2.54",
        "com.google.dagger:dagger:2.54",
        "com.google.googlejavaformat:google-java-format:1.25.2",
        "com.google.guava:guava:33.4.0-jre",
        # Test Filesystem
        "com.google.jimfs:jimfs:1.3.0",
        # For REST services
        "io.javalin:javalin:6.4.0",
        "javax.inject:javax.inject:1",
        "junit:junit:4.13.2",
        "org.apache.commons:commons-lang3:3.17.0",
        # Logger dependencies
        "org.apache.logging.log4j:log4j-core:2.24.3",
        "org.apache.logging.log4j:log4j-slf4j2-impl:2.24.3",
        # Fluent test assertions
        "org.assertj:assertj-core:3.27.1",
        # JMH microbenchmarking
        "org.openjdk.jmh:jmh-core:1.37",
        "org.openjdk.jmh:jmh-generator-annprocess:1.37",
        # OpenTelemetry
        "io.opentelemetry:opentelemetry-api:1.45.0",
        "io.opentelemetry:opentelemetry-sdk:1.45.0",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://maven.google.com",
    ],
)
use_repo(maven, "maven", "unpinned_maven")

# Buildifier
bazel_dep(
    name = "buildifier_prebuilt",
    version = "7.3.1",
    dev_dependency = True,
)

# rules_oci
bazel_dep(name = "aspect_bazel_lib", version = "2.10.0")
bazel_dep(name = "container_structure_test", version = "1.19.1")
bazel_dep(name = "rules_oci", version = "2.2.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_java",
    digest = "sha256:38e4b51e5fbd44e5b3f8d77bcc8ae573f265174249dad7316aa3a9ce0ada0cfc",
    image = "gcr.io/distroless/java17",
    #platforms = ["linux/arm64"],
)
use_repo(oci, "distroless_java")

# rules_pkg (for creating .tar files, required by rules_oci)
bazel_dep(name = "rules_pkg", version = "1.0.1")

# gazelle
bazel_dep(name = "rules_go", version = "0.51.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.40.0")

# Additional JVM rules. Loaded at the end to avoid conflicts.
bazel_dep(name = "contrib_rules_jvm", version = "0.27.0")
